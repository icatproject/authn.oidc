#!/usr/bin/env python3
from setup_utils import *
import os

# authn.oidc

def undeploy():
    app = actions.getAppName("authn.oidc")
    if app: actions.undeploy(app)

actions, arg, props = getActions("setup.properties", [])

prop_name = "run.properties"
prop_list = ["wellKnownUrl", "tokenIssuer", "icatUserClaim"]

properties = getProperties(prop_name, prop_list)

if arg in ["CONFIGURE", "INSTALL"]:
    actions.configure(prop_name, prop_list)
    actions.checkNoErrors()

if arg == "INSTALL":

    try:
        icatUserClaimException = properties["icatUserClaimException"]
    except KeyError:
        icatUserClaimException = ""

    try:
        mechanism = properties["mechanism"]
    except KeyError:
        mechanism = ""

    try:
        icatUserPrependMechanism = properties["icatUserPrependMechanism"]
    except KeyError:
        icatUserPrependMechanism = ""

    if icatUserPrependMechanism == "true":
        if mechanism == "":
            abort("icatUserPrependMechanism is 'true' but no mechanism is defined in run.properties")
    
    if mechanism != "":
        if icatUserPrependMechanism != "true":
            if icatUserClaimException == "true":
                print("Warning: the mechanism defined in run.properties is never used because icatUserPrependMechanism=false and icatUserClaimException=true")

    try:
        undeploy()
        ovfiles = [[prop_name, "WEB-INF/classes"]]
        if os.path.exists("logback.xml"): ovfiles.append(["logback.xml", "WEB-INF/classes"])
        actions.deploy(deploymentorder=80, files=ovfiles)
    except Exception as e:
        abort(str(e))

if arg == "UNINSTALL":
    try:
        undeploy()
    except Exception as e:
        abort(str(e))
